version: 2
jobs: 
  build: 
    docker:
      - image: circleci/golang:1.14
    parallelism: 2
    working_directory: ~/go-circleci
    environment: 
      TEST_RESULTS: /tmp/test-results 
    steps: 
      - checkout 
      - run: cd ocpp1.6 && go mod vendor
      - run: mkdir -p $TEST_RESULTS 
      - run: go env 
      - restore_cache: 
          keys:
            - go-mod-v4-{{ checksum "ocpp1.6/go.sum" }}
      - save_cache:
          key: go-mod-v4-{{ checksum "ocpp1.6/go.sum" }}
          paths:
            - "/go/pkg/mod"
      #- run: cd ocpp1.6/websocket && go vet
      #- run: cd ocpp1.6/websocket && go test -timeout=30m > $TEST_RESULTS/test
      - run:
          name: run unit tests
          command:
             PACKAGE_NAMES=cd $(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
             echo $PACKAGE_NAMES
             cd ocpp1.6 && gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - store_artifacts: 
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: 
          path: /tmp/test-results
workflows:
  version: 2
  build-workflow:
    jobs:
      - build

